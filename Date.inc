<?php
/**
 * Created by PhpStorm.
 * User: punk_undead
 * Date: 13.03.16
 * Time: 0:45
 */

namespace d\AntiLocale;


class Date {
  static $date = [
    'w' => [
      ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'],
      ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье'],
      ['Воскресенья', 'Понедельника', 'Вторника', 'Среды', 'Четверга', 'Пятницы', 'Субботы', 'Воскресенья'], // до следующего/ей ...
      ['Воскресенью', 'Понедельнику', 'Вторнику', 'Среде', 'Четвергу', 'Пятнице', 'Субботе', 'Воскресенью'], // к следующему/ей
      ['Воскресенье', 'Понедельник', 'Вторник', 'Среду', 'Четверг', 'Пятницу', 'Субботу', 'Воскресенье'],// в следующий/ую/ее
      ['Воскресеньем', 'Понедельником', 'Вторником', 'Средой', 'Четвергом', 'Пятницей', 'Субботой', 'Воскресеньем'], // следующим/ей ...
      ['Воскресеньи', 'Понедельнике', 'Вторнике', 'Среде', 'Четверге', 'Пятнице', 'Субботе', 'Воскресеньи'], // отчёт о ...
    ],
    'm' =>[
      ['', 'Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
      ['', 'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
      ['', 'Января', 'Февраля', 'Марта', 'Апреля', 'Мая', 'Июня', 'Июля', 'Августа', 'Сентября', 'Октября', 'Ноября', 'Декабря'],
      ['', 'Январю', 'Февралю', 'Марту', 'Апрелю', 'Маю', 'Июню', 'Июлю', 'Августу', 'Сентябрю', 'Октябрю', 'Ноябрю', 'Декабрю'],
      ['', 'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
      ['', 'Январём', 'Февралём', 'Мартом', 'Апрелем', 'Маем', 'Июнем', 'Июлем', 'Августом', 'Сентябрём', 'Октябрём', 'Ноябрём', 'Декабрём'],
      ['', 'Январе', 'Феврале', 'Марте', 'Апреле', 'Мае', 'Июне', 'Июле', 'Августе', 'Сентябре', 'Октябре', 'Ноябре', 'Декабре'],
    ]
  ];

  static public function format($format, $timestamp = NULL) {
    if ($timestamp === NULL) {
      $timestamp = REQUEST_TIME;
    }
    $out = '';
    $has_tokens = FALSE;
    $l = strlen($format);
    for ($i = 0; $i < $l; $i++) {
      if ($format[$i] !== '%') {
        $out .= $format[$i];
        continue;
      }
      $i++;
      if ($format[$i] === '%') {
        $out .= '%%';
        continue;
      }
      if ($format[$i] !== '#') {
        $has_tokens = TRUE;
        $out .= '%' . $format[$i];
        continue;
      }
      $i++;
      $transform = NULL;
      if ($format[$i] === 'l' || $format[$i] === 'u') {
        $transform = $format[$i];
        $i++;
      }
      $form = 0;
      if (is_numeric($format[$i])) {
        $form = (int)$format[$i];
        $i++;
      }
      $el = static::$date[$format[$i]][$form][(int)date($format[$i], $timestamp)];
      $out .= !$transform ? $el : ($transform === 'l' ? strtolower($el) : strtoupper($el));
    }
    return $has_tokens ? strftime($out, $timestamp) : $out;
  }
}